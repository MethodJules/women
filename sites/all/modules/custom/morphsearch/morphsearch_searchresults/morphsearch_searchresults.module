<?php
/**
 * Created by PhpStorm.
 * User: station
 * Date: 7/11/2017
 * Time: 2:02 PM
 */

/**
 * @file
 * Adds a block view to display Apache Solr search results in a block.
 */

/**
 * Implements hook_views_api().
 */
function morphsearch_searchresults_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'morphsearch_searchresults'),
  );
}

/**
 * Implements hook_views_default_views().
 */
function morphsearch_searchresults_views_default_views() {
  return morphsearch_searchresults_build_block_view();
}

/**
 * Creates a block view to display Apache Solr search results.
 * (Code generated by exporting the view created in Drupal.)
 *
 * @return array
 *   The block created block view.
 */
function morphsearch_searchresults_build_block_view() {
  $view = new view();
  $view->name = 'searchresults';
  $view->description = 'Display Search results in a block.';
  $view->tag = 'knowledge map';
  $view->base_table = 'apachesolr__solr';
  $view->human_name = 'Searchresults';
  $view->core = 7;
  $view->api_version = '3.0';
  $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

  /* Display: Master */
  $handler = $view->new_display('default', 'Master', 'default');
  $handler->display->display_options['use_ajax'] = TRUE;
  $handler->display->display_options['use_more_always'] = FALSE;
  $handler->display->display_options['use_more_text'] = 'mehr';
  $handler->display->display_options['access']['type'] = 'none';
  $handler->display->display_options['cache']['type'] = 'none';
  $handler->display->display_options['query']['type'] = 'views_query';
  $handler->display->display_options['exposed_form']['type'] = 'basic';
  $handler->display->display_options['exposed_form']['options']['submit_button'] = 'Anwenden';
  $handler->display->display_options['exposed_form']['options']['reset_button_label'] = 'Zurücksetzen';
  $handler->display->display_options['exposed_form']['options']['exposed_sorts_label'] = 'Sortieren nach';
  $handler->display->display_options['exposed_form']['options']['sort_asc_label'] = 'Aufsteigend';
  $handler->display->display_options['exposed_form']['options']['sort_desc_label'] = 'Absteigend';
  $handler->display->display_options['pager']['type'] = 'none';
  $handler->display->display_options['pager']['options']['offset'] = '0';
  $handler->display->display_options['style_plugin'] = 'default';
  $handler->display->display_options['row_plugin'] = 'fields';
  $handler->display->display_options['row_options']['hide_empty'] = TRUE;

  /* Verhalten, wenn keine Ergebnisse vorliegen: Global: Textbereich */
  $handler->display->display_options['empty']['area']['id'] = 'area';
  $handler->display->display_options['empty']['area']['table'] = 'views';
  $handler->display->display_options['empty']['area']['field'] = 'area';
  $handler->display->display_options['empty']['area']['empty'] = TRUE;
  $handler->display->display_options['empty']['area']['content'] = 'No Results';
  $handler->display->display_options['empty']['area']['format'] = 'only_admin';

  /* Feld: Apache Solr: path */
  $handler->display->display_options['fields']['path']['id'] = 'path';
  $handler->display->display_options['fields']['path']['table'] = 'apachesolr__solr';
  $handler->display->display_options['fields']['path']['field'] = 'path';
  $handler->display->display_options['fields']['path']['label'] = '';
  $handler->display->display_options['fields']['path']['exclude'] = TRUE;
  $handler->display->display_options['fields']['path']['element_label_colon'] = FALSE;

  /* Feld: Apache Solr: bundle */
  $handler->display->display_options['fields']['bundle']['id'] = 'bundle';
  $handler->display->display_options['fields']['bundle']['table'] = 'apachesolr__solr';
  $handler->display->display_options['fields']['bundle']['field'] = 'bundle';
  $handler->display->display_options['fields']['bundle']['label'] = '';
  $handler->display->display_options['fields']['bundle']['exclude'] = TRUE;
  $handler->display->display_options['fields']['bundle']['element_label_colon'] = FALSE;

  /* Feld: Apache Solr: label */
  $handler->display->display_options['fields']['label']['id'] = 'label';
  $handler->display->display_options['fields']['label']['table'] = 'apachesolr__solr';
  $handler->display->display_options['fields']['label']['field'] = 'label';
  $handler->display->display_options['fields']['label']['label'] = '';
  $handler->display->display_options['fields']['label']['alter']['make_link'] = TRUE;
  $handler->display->display_options['fields']['label']['alter']['path'] = '[path]';
  $handler->display->display_options['fields']['label']['alter']['alt'] = '[label] ';
  $handler->display->display_options['fields']['label']['alter']['word_boundary'] = FALSE;
  $handler->display->display_options['fields']['label']['element_class'] = 'icon [bundle]';
  $handler->display->display_options['fields']['label']['element_label_colon'] = FALSE;

  /* Filterkriterium: Apache Solr: Suche */
  $handler->display->display_options['filters']['keyword']['id'] = 'keyword';
  $handler->display->display_options['filters']['keyword']['table'] = 'apachesolr__solr';
  $handler->display->display_options['filters']['keyword']['field'] = 'keyword';
  $handler->display->display_options['filters']['keyword']['value'] = 'noresultsx';
  $handler->display->display_options['filters']['keyword']['exposed'] = TRUE;
  $handler->display->display_options['filters']['keyword']['expose']['operator_id'] = '';
  $handler->display->display_options['filters']['keyword']['expose']['label'] = 'Suche';
  $handler->display->display_options['filters']['keyword']['expose']['operator'] = 'keyword_op';
  $handler->display->display_options['filters']['keyword']['expose']['identifier'] = 'keyword';
  $handler->display->display_options['filters']['keyword']['expose']['remember_roles'] = array(
    2 => '2',
    1 => 0,
    3 => 0,
    4 => 0,
    12 => 0,
    13 => 0,
    14 => 0,
    15 => 0,
    16 => 0,
    17 => 0,
    18 => 0,
    19 => 0,
    20 => 0,
    21 => 0,
    22 => 0,
    23 => 0,
    24 => 0,
    25 => 0,
    26 => 0,
    27 => 0,
    28 => 0,
    29 => 0,
    30 => 0,
    31 => 0,
    32 => 0,
    33 => 0,
    34 => 0,
    35 => 0,
    36 => 0,
    37 => 0,
    38 => 0,
    39 => 0,
    40 => 0,
    41 => 0,
    42 => 0,
    43 => 0,
    44 => 0,
    45 => 0,
    46 => 0,
    52 => 0,
    53 => 0,
    54 => 0,
    55 => 0,
    56 => 0,
    57 => 0,
    58 => 0,
  );

  /* Display: Block */
  $handler = $view->new_display('block', 'Block', 'block');
  $translatables['searchresults'] = array(
    t('Master'),
    t('mehr'),
    t('Anwenden'),
    t('Zurücksetzen'),
    t('Sortieren nach'),
    t('Aufsteigend'),
    t('Absteigend'),
    t('No Results'),
    t('[label] '),
    t('Suche'),
    t('Block'),
  );

  $views[$view->name] = $view;
  return $views;
}

/**
 * Implements hook_form_FORM_ID_alter().
 * Removes the limitation to 128 characters for the 'keyword' textfield.
 * (Only on the search results block that is displayed besides knowledge maps.)
 */
function form_wissenskarte_module_form_views_exposed_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#id'] === 'views-exposed-form-searchresults-block') {
    $form['keyword']['#maxlength'] = null;
  }
}

/**
 * Implements hook_help().
 * Displays help link to README.txt in module overview (admin/modules).
 */
function morphsearch_searchresults_search_help($path, $arg) {
  switch ($path) {
    case 'admin/help#morphsearch_searchresults':
      $readme = file_get_contents(drupal_get_path('module', 'morphsearch_searchresults') . '/README.txt');
      return module_exists('markdown') ? filter_xss_admin(module_invoke('markdown', 'filter', 'process', 0, -1, $readme)) : '<pre>' . check_plain($readme) . '</pre>';
  }
}